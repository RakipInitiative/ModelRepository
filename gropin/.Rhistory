upperLogRisk[2:91,] <- as.matrix(log10(allPillmeans[2:91,]))
lowerLogRisk <- ifelse(is.na(lowerLogRisk),0,lowerLogRisk)
upperLogRisk <- ifelse(is.na(upperLogRisk),0,upperLogRisk)
diffLogRisk <- lowerLogRisk-upperLogRisk
diffLogRisk
diffLogRisk[matchingCretlogMeatVsCretLogFloor,]
diffLogRisk[matchingCretlogMeatVsCretLogFloor,rndPillmeanIDs]
dim(diffLogRisk[matchingCretlogMeatVsCretLogFloor,rndPillmeanIDs])
matchingCretlogMeatVsCretLogFloor
rndPillmeanIDs
dim(CretlogMeat)
diffLogRisk
matrix(1:20,4,5)
sample(1:4,4)
aa<-matrix(1:20,4,5)
cc<-sample(1:20,20)
cc
ccm<-matrix(cc,4,5)
aa[ccm]
aa<-matrix(20:-1:1,4,5)
aa<-matrix(20:1:-1,4,5)
aa<-matrix(20:1,4,5)
aa
aa[ccm]
aa
ccm
aa[ccm,ccm]
sample[1:4,4]
sample(1:4,4)
cc1<-sample(1:4,4)
cc2<-sample(1:4,5)
cc2<-sample(1:5,5)
aa[cc1,cc2]
aa
cc2<-rep(sample(1:4,5),times=4)
cc2<-sample(1:4,5)
cc2<-rep(sample(1:4,5),times=4)
cc2<-rep(sample(1:5,5),times=4)
cc2
cc2<-matrix(rep(sample(1:5,5),times=4),4,5)
cc2
cc1<-matrix(rep(sample(1:4,4),times=5),5,4)
cc1
cc1<-matrix(rep(sample(1:4,4),times=5),4,5)
cc1
aa[cc1,cc2]
cc2<-sample(1:4,5)
cc2<-sample(1:5,5)
cc1
cc2
aa[cc2]
aa[,cc2]
aa
cc2<-sample(1:3,5)
cc2<-sample(1:5,3)
aa
aa[,cc2]
aa[cc1,aa[,cc2]]
cc1
cc1<-matrix(rep(sample(1:4,4),times=3),4,3)
cc1
aa[cc1,aa[,cc2]]
cc1
aa
aa[cc1]
aa[cc1,]
aa[cc1,aa[,cc2]]
aa[,cc2]
cc1
cc2
diffLogRisk[matchingCretlogMeatVsCretLogFloor[rndPillmeanIDs],]
matchingCretlogMeatVsCretLogFloor
diffLogRisk[matchingCretlogMeatVsCretLogFloor[,rndPillmeanIDs],]
rndPillmeanIDs
diffLogRisk[,rndPillmeanIDs]
diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor]
diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor,]
diffLogRisk[,rndPillmeanIDs]
diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor]
matrix(diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor],length(CretLogSkin),niter)
source('~/BfR/EFSA/210411/RRM/rrm.r')
dim(logRiskMod )
dim(lowerLogRisk[,rndPillmeanIDs])
rm(Cretlog)
source('~/BfR/EFSA/210411/RRM/rrm.r')
matrix(lowerLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor],length(CretLogSkin),niter)
logRiskMod
matrix(lowerLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor],length(CretLogSkin),niter) - logRiskMod
10^logRisk
source('~/BfR/EFSA/210411/RRM/rrm.r')
Pdose
risk*matrix(rep(Pdose,times=niter),nrow=length(CretlogSkin),ncol=niter)
source('~/BfR/EFSA/210411/RRM/rrm.r')
length(CretSkin)
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
diffLogRisk
tau
dim(matrix(diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor],length(CretLogSkin),niter))
CretlogMeat
(CretlogMeat%%0.1)*10
matrix(diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor],length(CretLogSkin),niter)*(CretlogMeat%%0.1)*10
matrix(1:6,2,3)*c(1,2)
matrix(1:6,2,3)
dim((CretlogMeat%%0.1)*10)
t(matrix(rep(tau,length(CretLogSkin)),length(tau),length(CretLogSkin)))
matrix(diffLogRisk[,rndPillmeanIDs][matchingCretlogMeatVsCretLogFloor],length(CretLogSkin),1)*(CretlogMeat%%0.1)*10
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
View(matchingCretlogMeatVsCretLogCeil)
matchingCretlogMeatVsCretLogFloor
Pillmean[matchingCretlogMeatVsCretLogFloor]
Pillmean
Pillmean
content_CPMsOfDRM[cpm]
dim(content_CPMsOfDRM[cpm])
Pillmean <- matrix(content_CPMsOfDRM[cpm],dim(content_CPMsOfDRM[cpm])[1],length(tau))
Pillmean
matrix(content_CPMsOfDRM[cpm],dim(content_CPMsOfDRM[cpm])[1],length(tau))
dim(matrix(content_CPMsOfDRM[cpm],dim(content_CPMsOfDRM[cpm])[1],length(tau)))
content_CPMsOfDRM[cpm,]
dim(content_CPMsOfDRM[cpm])[1]
content_CPMsOfDRM[cpm]
matrix(content_CPMsOfDRM[cpm])
as.matrix(content_CPMsOfDRM[cpm])
typeof(content_CPMsOfDRM[cpm])
unlist(content_CPMsOfDRM[cpm])
matrix(unlist(content_CPMsOfDRM[cpm]),91,1)
Pillmean <- matrix(unlist(content_CPMsOfDRM[cpm]),dim(content_CPMsOfDRM[cpm])[1],length(tau))
source('~/BfR/EFSA/210411/RRM/rrm.r')
diffLogRisk
lowerLogRisk
source('~/BfR/EFSA/210411/RRM/rrm.r')
typeof(Pdose)
typeof(risk)
length(risk)
length(Pdose)
risk*Pdose
risk
Pdose
t(Pdose)
unlist(risk)
matrix(Pdose)
risk*matrix(Pdose)
source('~/BfR/EFSA/210411/RRM/rrm.r')
View(PdoseAfterIntervention)
source('~/BfR/EFSA/210411/RRM/rrm.r')
risk
PdoseAfterIntervention
risk*PdoseAfterIntervention
matrix(risk)*PdoseAfterIntervention
typeof(risk)
typeof(PdoseAfterIntervention)
matrix(PdoseAfterIntervention)
matrix(PdoseAfterIntervention,length(CretLogSkin),niter)
risk*matrix(PdoseAfterIntervention,length(CretLogSkin),niter)
t(risk)*matrix(PdoseAfterIntervention,length(CretLogSkin),niter)
risk*matrix(PdoseAfterIntervention,length(CretLogSkin),niter)
risk*risk
PdoseAfterIntervention[1]
PdoseAfterIntervention[1,]
PdoseAfterIntervention[,1]
unlist(risk)
unlist(risk)*risk
unlist(risk)*PdoseAfterIntervention
unlist(risk)*unlist(PdoseAfterIntervention)
risk*unlist(PdoseAfterIntervention)
matrix(risk)
matrix(risk)*PdoseAfterIntervention
aa<-matrix(1:16,4,4)
aa<-matrix(1:12,3,4)
aa
aa[1]
aa[1,]
risk[1]
aa[1,]*aa
dim(risk)
dim(PdoseAfterIntervention)
dim(aa)
aa[1,]*
3
aa[1,]
aa[,1]
aa[,1]*aa
source('~/BfR/EFSA/210411/RRM/rrm.r')
risk
rep(risk,times=5)
matrix(rep(risk,times=5),36,5)
matrix(rep(risk,times=5),36,5)*PdoseAfterIntervention
source('~/BfR/EFSA/210411/RRM/rrm.r')
matrix(rep(risk,times=5),36,5)*PdoseAfterIntervention
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
rndPillmeanIDs
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
source('~/BfR/EFSA/210411/RRM/rrm.r')
rndPillmeanIDs
source('~/BfR/EFSA/210411/RRM/rrm.r')
mode <- 'kinetic'
#mode <- 'responsesurface'
#mode <- 'time2multiply'
T_kinetic <- 9.5
days_kinetic <- 14.0
T <- seq(4,15.0,length.out=21)
days <- seq(0,28.0,length.out=21)
logIncrease <- 1
logN0 <- 0
simTime <- 20
lagTime <- 10
logNEnd <- 10
#############################
# start of Model script
#############################
multVar1 <- T
multVar2 <- days
logN <- rep(0,71)
time2Xlog <- rep(0,71)
response_surface <- function(T,days) {
0.89+0.081*days+0.11*T+0.000192*(days^2)-0.0034*(T^2)+0.0068*T*days
}
mumax <- outer(multVar1,multVar2,response_surface)
colnames(mumax)<-multVar2
rownames(mumax)<-multVar1
time2Xlog <- lagTime + logIncrease/mumax
q0 <- 1/(exp(lagTime)-1)
#mumax <- response_surface(T,days)
t <- seq(0,simTime,length.out = 71)
logN <- function(mumax) {
A <- t + (1/mumax)*log((exp(-mumax*t)+q0)/(1+q0))
logN = logN0 + mumax*A - log(1+((exp(mumax*A)-1)/(exp(logNEnd-logN0))))
return(logN=logN)
}
timeTotal <- rep(t,times=length(mumax))
dim(mmumax)
dim(mumax)
length(mumax)
length(t)
length(timeTotal)
71*441
mumax
mumaxTo
mumaxTotal
mumaxTotal <-rep(mumax,each=length(t))
mumaxTotal[1]
mumaxTotal[2]
mumaxTotal[72]
21*71
mumaxTotal[1492]
mumaxTotal[1491]
logNTotal <- unlist(lapply(mumax, logN))
logNTotal
length(logNTotal)
logNTotal[1]
logNTotal[71]
logNTotal[72]
mumax[2,1]
plot(logNTotal[72:142])
plot(logNTotal[72:142]-logN(mumax[2,1]))
plot(logNTotal[72:142]-logN(mumax[1,2]))
TempTotal <-rep(rep(T,times=length(t)),each=length(days))
TempTotal[1]
TempTotal[2]
TempTotal[3]
TempTotal[22]
daysTotal <- rep(rep(days,each=length(t)),times=length(T))
daysTotal[1]
daysTotal[]
daysTotal[2]
daysTotal[3]
daysTotal[4]
daysTotal[22]
daysTotal[23]
daysTotal[72]
TempTotal[22]
rm(TempTotal)
rm(daysTotal)
rep(T,times=length(t))
rep(T,each=length(t))
TempTotal <-rep(rep(T,each=length(t)),times=length(days))
TempTotal[1]
TempTotal[71]
TempTotal[72]
TempTotal[142]
TempTotal[143]
TempTotal[-1]
TempTotal[441*71]
TempTotal[441*71+1]
rep(days,each=length(t))
daysTotal <- rep(rep(days,each=length(t)),each=length(T))
daysTotal
daysTotal[1]
daysTotal[71]
daysTotal[72]
daysTotal[172]
daysTotal[272]
daysTotal[372]
daysTotal[441]
daysTotal[441]
daysTotal[442]
daysTotal[443]
71*21
daysTotal[1443]
daysTotal[1491]
daysTotal[1491]
daysTotal[1492]
71*21*2
daysTotal[2983]
daysTotal[2982]
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
resultTotal[resultTotal[TempTotal]==T_kinetic]
colnames(resultTotal)
resultTotal[TempTotal]
resultTotal["TempTotal"]
resultTotal[resultTotal["TempTotal"]==T_kinetic]
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic]
length(resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic])
355*71
355/71
length(resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic]["logNTotal"])
length(resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][5])
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][5]
colnames(resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic])
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][1:71]
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][72:142]
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][143:142+71]
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][143:(142+71)]
plot(resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][143:(142+71)])
plot(resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][1:71],resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][143:(142+71)])
mumax["4","0"]
mumax[T_kinetic,days_kinetic]
resultTotal[resultTotal["TempTotal"]==T_kinetic&resultTotal["daysTotal"]==days_kinetic][72:142]
mumax["9.5","14.0"]
mumax["9.5","14"]
char(T_kinetic)
str(T_kinetic)
str(T_kinetic)[1]
str(T_kinetic)[2]
mumax[str(T_kinetic),str(days_kinetic)]
T_kinetic
as.char(T_kinetic)
as.character(T_kinetic)
mumax[as.character(T_kinetic),as.character(days_kinetic)]
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
text(logN[1],simTime,'test')
text(logN(mumax_kinetic)[1],simTime,'test')
if(mode=='kinetic') {
mumax_kinetic <- mumax[as.character(T_kinetic),as.character(days_kinetic)]
mainText <- paste0('Temperature = ',
T_kinetic,
', days = ', days_kinetic)
plot(t,logN(mumax_kinetic),
xlab='t in h',
ylab='log N in CFU/g',
main='Growth prediction of Gropin Model (ID 492)\n
Listeria monocytogenes in/on Cheese Milk')
text(logN(mumax_kinetic)[1],simTime,'test')
}
source('~/BfR/EFSA/210411/gropin492.r')
logN(mumax_kinetic)[1]
simTime
text(0,10,'test')
text(simTime,logN(mumax_kinetic)[1],'test')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
multVar1
plot(T)
71*21^4
21^4
a=21^4
a*71
a*71/1000
append(c(1,2),3)
append(c(1,2),'test')
a<-append(c(1,2),'test')
append(a,'test')
a
append(a,'test','test')
append(a,c('test','test'))
seq(0,20,length.out = 21)
source('~/BfR/EFSA/210411/gropin256.r')
mumax*timesteps
source('~/Projects/ModelRepository/gropin/gropin2R.r')
nrOfVariables
nrOfVariables
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript1049.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript1049.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript1160.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript1160.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript1325.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript27.r')
mumax
T
aw#
View(mumax)
source('~/Projects/ModelRepository/gropin/gropin2R.r')
as.character(growthModels$Var1)
table(as.character(growthModels$Var1))
table(cbind(as.character(growthModels$Var1),as.character(growthModels$Var2)))
toupper("test")
toupper("TEST")
toupper("TEsT")
toupper("TEsT")growthModels$equation[run]
growthModels$equation[run]
toupper("Tsddf31451T")
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
myVarNames
myVarNames[2]<-"+/- "
gsub("[+]","",myVarNames)
gsub("[+/]","",myVarNames)
gsub("[/+]","",myVarNames)
gsub("[/-+]","",myVarNames)
gsub("[-/+]","",myVarNames)
gsub("[+/-]","",myVarNames)
table(cbind(as.character(growthModels$Var1),
as.character(growthModels$Var2),
as.character(growthModels$Var3),
as.character(growthModels$Var4),
as.character(growthModels$Var5),
as.character(growthModels$Var6),
as.character(growthModels$Var7),
as.character(growthModels$Var8),
as.character(growthModels$Var9),
as.character(growthModels$Var10)))
table(cbind(as.character(growthModels$Var1),
as.character(growthModels$Var2),
as.character(growthModels$Var3),
as.character(growthModels$Var4),
as.character(growthModels$Var5),
as.character(growthModels$Var6),
as.character(growthModels$Var7),
as.character(growthModels$Var8),
as.character(growthModels$Var9),
as.character(growthModels$Var10))))
table(cbind(as.character(growthModels$Var1),
as.character(growthModels$Var2),
as.character(growthModels$Var3),
as.character(growthModels$Var4),
as.character(growthModels$Var5),
as.character(growthModels$Var6),
as.character(growthModels$Var7),
as.character(growthModels$Var8),
as.character(growthModels$Var9),
as.character(growthModels$Var10))))=
existingVariables <- table(cbind(as.character(growthModels$Var1),
as.character(growthModels$Var2),
as.character(growthModels$Var3),
as.character(growthModels$Var4),
as.character(growthModels$Var5),
as.character(growthModels$Var6),
as.character(growthModels$Var7),
as.character(growthModels$Var8),
as.character(growthModels$Var9),
as.character(growthModels$Var10)))
existingVariables
typeof(existingVariables)
existingVariables[1]
existingVariables[1][1]
unlist(existingVariables)
existingVariables[1,1]
existingVariables[1]
data.frame(existingVariables)
data.frame(existingVariables)$Var1
unlist(data.frame(existingVariables)$Var1)
as.character(data.frame(existingVariables)$Var1)
