mumax["9.5","14.0"]
mumax["9.5","14"]
char(T_kinetic)
str(T_kinetic)
str(T_kinetic)[1]
str(T_kinetic)[2]
mumax[str(T_kinetic),str(days_kinetic)]
T_kinetic
as.char(T_kinetic)
as.character(T_kinetic)
mumax[as.character(T_kinetic),as.character(days_kinetic)]
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
text(logN[1],simTime,'test')
text(logN(mumax_kinetic)[1],simTime,'test')
if(mode=='kinetic') {
mumax_kinetic <- mumax[as.character(T_kinetic),as.character(days_kinetic)]
mainText <- paste0('Temperature = ',
T_kinetic,
', days = ', days_kinetic)
plot(t,logN(mumax_kinetic),
xlab='t in h',
ylab='log N in CFU/g',
main='Growth prediction of Gropin Model (ID 492)\n
Listeria monocytogenes in/on Cheese Milk')
text(logN(mumax_kinetic)[1],simTime,'test')
}
source('~/BfR/EFSA/210411/gropin492.r')
logN(mumax_kinetic)[1]
simTime
text(0,10,'test')
text(simTime,logN(mumax_kinetic)[1],'test')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
source('~/BfR/EFSA/210411/gropin492.r')
multVar1
plot(T)
71*21^4
21^4
a=21^4
a*71
a*71/1000
append(c(1,2),3)
append(c(1,2),'test')
a<-append(c(1,2),'test')
append(a,'test')
a
append(a,'test','test')
append(a,c('test','test'))
seq(0,20,length.out = 21)
source('~/BfR/EFSA/210411/gropin256.r')
mumax*timesteps
seq(1,10)
rep(1,10)
responseSurface <- cbind(seq(1,10),rep(1,10))
dim(responseSurface)
myDF <- dim(responseSurface)
myDF[2]
responseSurface[,myDF[2]]
responseSurface[,1:myDF[2]-1]
colnames(cbind(seq(1,10),rep(1,10)))
colnames(data.frame(cbind(seq(1,10),rep(1,10))))
responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
colnames(responseSurface)
colnames(responseSurface)[1]
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
rep(seq(1,10),2)
cbind(rep(seq(1,10),2),seq(1,10))
#responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
responseSurface <- data.frame(cbind(seq(1,10),seq(1,10),seq(1,10)))
responseSurface
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
matrix(timeToXlog,nrow=myDF[1])
timeToXlog
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
matrix(timeToXlog,nrow=sqrt(myDF[1]))
responseSurface[,1]
colnames(responseSurface)
myAxis<-colnames(responseSurface)
esponseSurface.pivot(index='X1',columns='X2',values='X3')
responseSurface.pivot(index='X1',columns='X2',values='X3')
install.packages('reshape')
library(reshape)
cast(responseSurface, X1 ~ X2)
#responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
responseSurface <- data.frame(cbind(rep(1:4,4),rep(1:4,4),seq(1,16)))
cast(responseSurface, X1 ~ X2)
#responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
responseSurface <- data.frame(cbind(rep(1:4,4),rep(1:4,times=4),seq(1,16)))
View(responseSurface)
#responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
responseSurface <- data.frame(cbind(rep(1:4,4),rep(1:4,each=4),seq(1,16)))
cast(responseSurface, X1 ~ X2)
dcast(responseSurface, X1 ~ X2)
install.packages("reshape2")
library(reshape2)
dcast(responseSurface, X1 ~ X2)
acast(responseSurface, X1 ~ X2)
lagTime <- 10
logIncrease <- 1
#responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
responseSurface <- data.frame(cbind(rep(1:4,4),rep(1:4,each=4),seq(1,16)))
#############################
# start of Model script
#############################
myDF <- dim(responseSurface)
# mumax is always in the last column
mumax <- responseSurface[,myDF[2]]
# all corresponding parameters are in the other columns
nrOfIndependentVars <- myDF[2]-1
argumentsPar <- responseSurface[,1:nrOfIndependentVars]
timeToXlog <- lagTime + logIncrease/mumax
timeToXlog
timeToXlog <- data.frame(cbind(argumentsPar,lagTime + logIncrease/mumax))
timeToXlog <- lagTime + logIncrease/mumax
resultDF <- data.frame(cbind(argumentsPar,timeToXlog))
myAxis <- colnames(argumentsPar)
timeToXlog <- lagTime + logIncrease/mumax
resultDF <- acast(data.frame(cbind(argumentsPar,timeToXlog)),myAxis[1] ~ myAxis[2])
resultDF
data.frame(cbind(argumentsPar,timeToXlog))
myDF <- data.frame(cbind(argumentsPar,timeToXlog))
acast(myDF,X1~X2)
acast(myDF,myAxis)
acast(myDF,myAxis[1]~myAxis[Â²])
acast(myDF,myAxis[1]~myAxis[2])
myAxis
acast(myDF,as.character(myAxis[1])~as.character(myAxis[2]))
acast(myDF,as.factor(myAxis[1])~as.factor(myAxis[2]))
acast(myDF,as.formula(myAxis[1])~as.formula(myAxis[2]))
acast(myDF,paste(myAxis[1], myAxis[2], sep="~")
)
acast(myDF,paste(myAxis[1], myAxis[2], sep="~"))
myDF
acast(myDF,paste(myAxis[1], myAxis[2], sep="~"),value=timeToXlog)
acast(myDF,paste(myAxis[1], myAxis[2], sep="~"))
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
lagTime <- 10
logIncrease <- 1
#responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
responseSurface <- data.frame(cbind(rep(1:4,4),rep(1:4,each=4),seq(1,16)))
#############################
# start of Model script
#############################
myDF <- dim(responseSurface)
# mumax is always in the last column
mumax <- responseSurface[,myDF[2]]
# all corresponding parameters are in the other columns
nrOfIndependentVars <- myDF[2]-1
argumentsPar <- responseSurface[,1:nrOfIndependentVars]
myAxis <- colnames(argumentsPar)
timeToXlog <- lagTime + logIncrease/mumax
myDF <- data.frame(cbind(argumentsPar,timeToXlog))
result <- acast(myDF,paste(myAxis[1], myAxis[2], sep="~"))
responseSurface[,1]
colnames(myDF)
colnames(result)
as.numeric(colnames(result))
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
library(reshape2)
remove.packages("reshape2")
library(reshape2)
source('~/Projects/ModelRepository/gropin/time_to_X_Log_Fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
abs(-1)
abs(1)
c(1,2)
c(1,2)*c(3,4)
c(1,2)*c(3,4,4)
T <- seq(10,34,length.out=21)
a <- 0.0442
Tmin <- 5.407
visVar1 <- 'T'
visVar2 <- 'NA'
mode <- 'responsesurface'
lagTime <- 10
logIncrease <- 1
logN0 <- 0
logNEnd <- 10
T_kinetic <- 22
simTime <- 50
#############################
# start of Model script
#############################
response_surface <- function(T) {
(a*(T-Tmin))^2
}
mumax <- response_surface(T)
time2Xlog <- lagTime + logIncrease/mumax
q0 <- 1/(exp(lagTime)-1)
timesteps <- seq(0,simTime,length.out = 71)
A <- timesteps + (1/mumax)*log((exp(-mumax*timesteps)+q0)/(1+q0))
source('~/Projects/ModelRepository/gropin/showcase/gropin256_V0.1.r')
min(1,2)
min(-1,2)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
N
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
N
Q0
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
min(c(1,2),3)
min(c(1,2),rep(3,2))
rep(3,2))
rep(3,2)
min(c(1,2),rep(3,2))
pmin(c(1,2),rep(3,2))
pmin(c(1,2),rep(1.5,2))
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
N
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lapply(mumax,kinetic,Q0=Q0)
kinet(1,1)
kinetic(1,1)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lagtime <- 10 #!>0
N0 <- 0
NEnd <- 10
simTime <- 20
responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
#responseSurface <- data.frame(cbind(rep(5:8,4),rep(1:4,each=4),seq(1,16)))
#############################
# start of Model script
#############################
timesteps <- seq(0,simTime,length.out = 71)
myDF <- dim(responseSurface)
# mumax is always in the last column
mumax <- responseSurface[,myDF[2]]
# all corresponding parameters are in the other columns
nrOfIndependentVars <- myDF[2]-1
argumentsPar <- responseSurface[,1:nrOfIndependentVars]
myAxis <- colnames(argumentsPar)
h0 <- lagtime*mumax
Q0 <- log(1/(exp(h0)-1))
kinetic <- function(mumax,Q0) {
help <-  mumax*(timesteps[2:71]-timesteps[1:70])
Q <- Q0 + help
#print(mumax)
Nt = pmin((N0 + 1/(1+exp(Q))*help/log(10)),rep(NEnd,71))
return(Nt=Nt)
}
N <- lapply(mumax, kinetic, Q0=Q0)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
View(kinetic)
lapply(c(1,2),kinetic)
lapply(c(1,2),kinetic,Q0=Q0)
lapply(c(1,2),kinetic,Q0=c(1,2))
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lagtime <- 10 #!>0
N0 <- 0
NEnd <- 10
simTime <- 20
responseSurface <- data.frame(cbind(seq(1,10),seq(1,10)))
#responseSurface <- data.frame(cbind(rep(5:8,4),rep(1:4,each=4),seq(1,16)))
#############################
# start of Model script
#############################
timesteps <- seq(0,simTime,length.out = 71)
myDF <- dim(responseSurface)
# mumax is always in the last column
mumax <- responseSurface[,myDF[2]]
# all corresponding parameters are in the other columns
nrOfIndependentVars <- myDF[2]-1
argumentsPar <- responseSurface[,1:nrOfIndependentVars]
myAxis <- colnames(argumentsPar)
kinetic <- function(mumax,Q0) {
h0 <- lagtime*mumax
Q0 <- log(1/(exp(h0)-1))
help <-  mumax*(timesteps[2:71]-timesteps[1:70])
Q <- Q0 + help
#print(mumax)
Nt = pmin((N0 + 1/(1+exp(Q))*help/log(10)),rep(NEnd,71))
return(Nt=Nt)
}
kinetic(1,1)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
exp(Q)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
help <-  mumax*(timesteps[2:71]-timesteps[1:70])
Q <- Q0 + help
#print(mumax)
Nt = pmin((N0 + 1/(1+exp(Q))*help/log(10)),rep(NEnd,71))
N0 <- 1
#print(mumax)
Nt = pmin(N0 + 1/(1+exp(Q))*help/log(10),rep(NEnd,71))
N0 + 1/(1+exp(Q))*help/log(10)
help
length(timesteps)
length(rep(NA,length(timesteps)-1))
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
plot(timesteps,N)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
#############################
# start of Model script
#############################
#timesteps <- seq(0,simTime,length.out = 71)
timesteps <- seq(0,simTime,by=0.5)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
N[1:19]
Q[1:10]
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
Q[1]
Q[1:10]
N[1:10]
N[1[]
N[1
N[1]
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
N[1:5]
N[1:15]
N[1:100]
N[270]
N[269]
Q[269]
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
Nt(h0)[269]
Nt(h0)[270]
rep(0.260284,5)
h0 <- lagtime*mumax
h0
mumax <- rep(0.260284,5)
h0 <- lagtime*mumax
Ntotal <- lapply(h0, kinetic)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
h0
lapply(h0, kinetic)#
lapply(h0, kinetic)
lapply(1,kinetic)
apply(1,kinetic)
lapply(1,kinetic);
warnings()[1:5]
lapply(1,kinetic);
kinetic <- function(h0) {
Q <- rep(NA,length(timesteps))
Q[1] <- log(1/(exp(h0)-1))
print(Q[1])
N <- rep(NA,length(timesteps))
N[1] <- N0
for(ti in 2:length(timesteps)){
rate <- mumax*(timesteps[ti]-timesteps[ti-1])
Q[ti] <- Q[ti-1] + rate
N[ti] <- min(N[ti-1] + 1/(1+exp(-Q[ti]))*(1-10^(-abs(N[ti-1]-NEnd)))*rate/log(10),NEnd)
}
return(N=N)
}
lapply(1,kinetic);
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lapply(h0=1,kinetic);
lapply(1,kinetic);
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lapply(1,kinetic)
lapply(c(1,2),kinetic)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
Ntotal[1]
plot(timesteps,Ntotal[1])
length(total[1])
length(Ntotal[1])
unlist(Ntotal[1])
plot(timesteps,unlist(Ntotal[1]))
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
unlistNtTotal
unlist(NtTotal)
mumax
rep(timesteps,times=length(mumax))
rep(mumax,each=length(timesteps))
argumentsPar
c('time in h',
'growthrate',
'N(t) in CFU/g',
paste0(myAxis))
c('time in h',
'growthrate',
'N(t) in CFU/g',
paste0(myAxis))
myAxis
colnames(argumentsPar)
is.na(colnames(argumentsPar))
is.null(colnames(argumentsPar))
paste('test',c(1,2))
nrOfIndependentVars
paste('test',1:2)
paste('test',1:1)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
colnames(resultTotal)
paste(c(1,2),c(3,4))
paste(c(1,2),c(3,4),collapse='=')
paste(c(1,2),'=',c(3,4),collapse=',')
paste(c(1,2),'=',c(3,4),collapse=', ')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
argumentsPar
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript36.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
argumentsParmyVarNames
myVarNames
myVarMin
as.double(as.character(growthModels$Var1Min[run])
)
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lapply(mumax, kinetic)
View(resultTotal)
source('~/Projects/ModelRepository/gropin/fullscript/fullScript233.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript233.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/fullscript/fullScript233.r')
source('~/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
lagtime <- 10 #!>0
N0 <- 1
NEnd <- 9
simTime <- 20
#responseSurface <- data.frame(cbind(seq(0.1,1,by=0.1),seq(1,10)))
responseSurface <- data.frame(cbind(rep(5:8,4),rep(1:4,each=4),seq(1,16)))
showNt <- 1
#############################
# start of Model script
#############################
timesteps <- seq(0,simTime,length.out = 71)
#timesteps <- seq(0,simTime,by=0.5)
myDF <- dim(responseSurface)
# mumax is always in the last column
mumax <- responseSurface[,myDF[2]]
#mumax <- 0.03459
# all corresponding parameters are in the other columns
nrOfIndependentVars <- myDF[2]-1
argumentsPar <- responseSurface[,1:nrOfIndependentVars]
if(is.null(colnames(argumentsPar))){
myAxis <- paste('Parameter',1:nrOfIndependentVars)
} else {
myAxis <- colnames(argumentsPar)
}
kinetic <- function(mumax) {
h0 <- lagtime*mumax
Q <- rep(NA,length(timesteps))
Q[1] <- log(1/(exp(h0)-1))
N <- rep(NA,length(timesteps))
N[1] <- N0
for(ti in 2:length(timesteps)){
rate <- mumax*(timesteps[ti]-timesteps[ti-1])
Q[ti] <- Q[ti-1] + rate
N[ti] <- min(N[ti-1] + 1/(1+exp(-Q[ti]))*(1-10^(-abs(N[ti-1]-NEnd)))*rate/log(10),NEnd)
}
return(N=N)
}
resultTotal <- as.data.frame(cbind(rep(timesteps,times=length(mumax)),
rep(mumax,each=length(timesteps)),
unlist(lapply(mumax, kinetic)),
rep(argumentsPar,each=length(timesteps))
))
colnames(resultTotal) <- c('time in h',
'growthrate',
'N(t) in CFU/g',
paste0(myAxis))
myAxis
c(1,myAxis)
colnames(resultTotal) <- c('time in h',
'growthrate',
'N(t) in CFU/g',
myAxis)
c('time in h',
'growthrate',
'N(t) in CFU/g',
myAxis)
colnames(resultTotal)
argumentsPar
rep(argumentsPar,each=length(timesteps))
argumentsPar
rep(argumentsPar,2)
rep(argumentsPar,each=2)
rep(argumentsPar[1],each=2)
resultTotal <- as.data.frame(cbind(rep(timesteps,times=length(mumax)),
rep(mumax,each=length(timesteps)),
unlist(lapply(mumax, kinetic)),
rep(argumentsPar[1],each=length(timesteps)),
rep(argumentsPar[2],each=length(timesteps))
))
colnames(resultTotal) <- c('time in h',
'growthrate',
'N(t) in CFU/g',
myAxis)
colnames(resultTotal)
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
argumentsPar
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
source('~/Projects/ModelRepository/gropin/growth_curve_fullscript.r')
