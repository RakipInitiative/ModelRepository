aw
La
response_surface <- function(T,pH,aw,La) {
0.0247933*sqrt(aw-0.934)*(T-4)*sqrt(1-((10^3.9)/(10^pH)))*sqrt(1-(La/(10.7*(1+10^(pH-3.86)))))*sqrt(1-(La/(823.4*(1+10^(3.86-pH)))))
}
notPresent
expectedAxes[!present %in% expectedAxes]
expectedAxes[!visAxes %in% expectedAxes]
expectedAxes[!expectedAxes %in% visAxes]
qqq<-expectedAxes[!expectedAxes %in% visAxes]
for (rr in qqq) {print("yes")}
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
notVisibleAxes
notVisibleAxes[1]
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
result <- outer(multVar1,multVar2,response_surface,notVisibleAxes[1],notVisibleAxes[2])
result <- outer(multVar1,multVar2,response_surface,aw,La)
result <- outer(multVar1,multVar2,response_surface,aw=aw,La=La)
aw
La
T
pH
result <- outer(T,pH,response_surface,aw=aw,La=La)
result
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
result
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
aw
pH
T
La
response_surface(1,1,1,1)
qq<-response_surface(1,1,1,1)
qq
0.0247933*sqrt(aw-0.934)
(T-4)
sqrt(1-((10^3.9)/(10^pH)))
pH
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
result
notVisibleAxes
result <- outer(multVar1,multVar2,response_surface,notVisibleAxes[1],notVisibleAxes[2])
result <- outer(multVar1,multVar2,response_surface,CO2_dissolved_,NaL)
result
notVisibleAxes
q<-notVisibleAxes
qq<-NaL
#############################
# start of Visualisation script
#############################
persp(multVar1,multVar2,result,col = 'green',xlab=visVar1,ylab=visVar2,zlab='mu_max',theta=35,phi=20,shade=0.25,ticktype = 'detailed')
colnames(result)<-multVar2
rownames(result)<-multVar1
#############################
# start of Visualisation script
#############################
persp(multVar1,multVar2,result,col = 'green',xlab=visVar1,ylab=visVar2,zlab='mu_max',theta=35,phi=20,shade=0.25,ticktype = 'detailed')
multVar1
multVar2
reverse(multVar2)
rev(multVar)
rev(multVar2)
#############################
# start of Visualisation script
#############################
persp(multVar1,rev(multVar2),result,col = 'green',xlab=visVar1,ylab=visVar2,zlab='mu_max',theta=35,phi=20,shade=0.25,ticktype = 'detailed')
result <- outer(multVar1,multVar2,response_surface,q,qq)
q
qq<-NaL
qqq<-CO2_dissolved_
result <- outer(multVar1,multVar2,response_surface,qq,qqq)
#############################
# start of Visualisation script
#############################
persp(multVar1,rev(multVar2),result,col = 'green',xlab=visVar1,ylab=visVar2,zlab='mu_max',theta=35,phi=20,shade=0.25,ticktype = 'detailed')
install.packages("hash")
letters
expectedAxes
w<-hash(expectedAxes,T,aw,CO2_dissolved_,NaL)
library(hash)
w<-hash(expectedAxes,T,aw,CO2_dissolved_,NaL)
T
aw
CO2
CO2_dissolved_
NaL
typeof
typeof(letters)
typeof(expectedAxes)
w<-hash(T=T,aw=aw,CO2_dissolved_=CO2_dissolved_,NaL=NaL)
w["T"]
values(h["T"])
values(h,keys="T")
values(h)
h
values(w["T"])
as.double(values(w["T"]))
expectedAxes
replicate(2,expectedAxes)
paste(replicate(2,expectedAxes),collapse='=')
paste(t(replicate(2,expectedAxes)),collapse='=')
mat<-t(replicate(2,expectedAxes))
mat
paste(mat[,1], mat[,2], sep = ",", collapse = ";")
mat<-replicate(2,expectedAxes)
paste(mat[,1], mat[,2], sep = ",", collapse = ";")
paste(mat[,1], mat[,2], sep = "=", collapse = ",")
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
replicate(2,"jjj")
paste(replicate(2,"jjj"),collapse=",")
numbers
1:restVariables
paste(replicate(2,"jjj"),1:restVariables,collapse=",")
paste(replicate(2,"jjj"),"[",1:restVariables,collapse=",")
paste0(replicate(2,"jjj"),"[",1:restVariables,collapse=",")
paste0(replicate(2,"jjj"),"[",1:restVariables,"]",collapse=",")
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
paste0(replicate(restVariables,"notVisibleAxes["),1:restVariables,"]"
)
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
library(hash)
myHash <- hash(T=T,aw=aw,CO2_dissolved_=CO2_dissolved_,NaL=NaL)
library(hash)
myHash <- hash(T=T,aw=aw,CO2_dissolved_=CO2_dissolved_,NaL=NaL)
if (visVar1 == 'T') {
multVar1 <- T
}
if (visVar1 == 'aw') {
multVar1 <- aw
}
if (visVar1 == 'CO2_dissolved_') {
multVar1 <- CO2_dissolved_
}
if (visVar1 == 'NaL') {
multVar1 <- NaL
}
if (visVar2 == 'T') {
multVar2 <- T
}
if (visVar2 == 'aw') {
multVar2 <- aw
}
if (visVar2 == 'CO2_dissolved_') {
multVar2 <- CO2_dissolved_
}
if (visVar2 == 'NaL') {
multVar2 <- NaL
}
visAxes <- c(visVar1,visVar2)
expectedAxes <- c('T','aw','CO2_dissolved_','NaL')
notPresent<-match(expectedAxes,visAxes)
if('T' %in% expectedAxes[is.na(notPresent)]) {myHash['T'] <- 0}
if('aw' %in% expectedAxes[is.na(notPresent)]) {myHash['aw'] <- 0}
if('CO2_dissolved_' %in% expectedAxes[is.na(notPresent)]) {myHash['CO2_dissolved_'] <- 0}
if('NaL' %in% expectedAxes[is.na(notPresent)]) {myHash['NaL'] <- 0}
response_surface <- function(T,aw,CO2_dissolved_,NaL) {
(b*(T-Tmin)*sqrt((aw-awmin)*(CO2max-CO2_dissolved_)*(NaLmax-NaL)))
}
notVisibleAxes <- expectedAxes[!expectedAxes %in% visAxes]
result <- outer(values(myHash[visVar1]),values(myHash[visVar2]),response_surface,myHash[notVisibleAxes[1]],myHash[notVisibleAxes[2]])
result <- outer(as.double(values(myHash[visVar1])),as.double(values(myHash[visVar2])),response_surface,as.double(myHash[notVisibleAxes[1]]),as.double(myHash[notVisibleAxes[2]])
)
notVisibleAxes[1]
myHash[notVisibleAxes[1]]
result <- outer(as.double(values(myHash[visVar1])),as.double(values(myHash[visVar2])),response_surface,as.double(values(myHash[notVisibleAxes[1]])),as.double(values(myHash[notVisibleAxes[2]])))
colnames(result)<-multVar2
rownames(result)<-multVar1
#############################
# End of Model script
#############################
#############################
# start of Visualisation script
#############################
persp(as.double(values(myHash[visVar1])),as.double(values(myHash[visVar2])),result,col = 'green',xlab=keys(myHash[visVar1]),ylab=keys(myHash[visVar2]),zlab='mu_max',theta=35,phi=20,shade=0.25,ticktype = 'detailed')
#############################
# End of Visualisation script
#############################
keys(myHas(visVar1))
keys(myHash(visVar1))
keys(myHash[visVar1])
typeof(keys(myHash[visVar1]))
#############################
# start of Visualisation script
#############################
persp(as.double(values(myHash[visVar1])),as.double(values(myHash[visVar2])),result,col = 'green',xlab=keys(myHash[visVar1]),ylab=keys(myHash[visVar2]),zlab='mu_max',theta=35,phi=20,shade=0.25,ticktype = 'detailed')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
myVarMax
myVarMin
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
#############################
# start of Parameter script
#############################
T <- seq(4.004,11.988,length.out=21)
aw <- seq(0.9612378,0.9892883,length.out=21)
CO2_dissolved_ <- seq(0,1984.014,length.out=21)
NaL <- seq(0,2.997,length.out=21)
b <- 0.000578
awmin <- 0.9544
Tmin <- -9.0299999999999994
CO2max <- 6691
NaLmax <- 5.87
visVar1 <- 'T'
visVar2 <- 'aw'
#############################
# end of Parameter script
#############################
#############################
# start of Model script
#############################
library(hash)
myHash <- hash(T=T,aw=aw,CO2_dissolved_=CO2_dissolved_,NaL=NaL)
if (visVar1 == 'T') {
multVar1 <- T
}
if (visVar1 == 'aw') {
multVar1 <- aw
}
if (visVar1 == 'CO2_dissolved_') {
multVar1 <- CO2_dissolved_
}
if (visVar1 == 'NaL') {
multVar1 <- NaL
}
if (visVar2 == 'T') {
multVar2 <- T
}
if (visVar2 == 'aw') {
multVar2 <- aw
}
if (visVar2 == 'CO2_dissolved_') {
multVar2 <- CO2_dissolved_
}
if (visVar2 == 'NaL') {
multVar2 <- NaL
}
visAxes <- c(visVar1,visVar2)
expectedAxes <- c('T','aw','CO2_dissolved_','NaL')
notPresent<-match(expectedAxes,visAxes)
if('T' %in% expectedAxes[is.na(notPresent)]) {myHash['T'] <- 0}
if('aw' %in% expectedAxes[is.na(notPresent)]) {myHash['aw'] <- 0}
if('CO2_dissolved_' %in% expectedAxes[is.na(notPresent)]) {myHash['CO2_dissolved_'] <- 0}
if('NaL' %in% expectedAxes[is.na(notPresent)]) {myHash['NaL'] <- 0}
response_surface <- function(T,aw,CO2_dissolved_,NaL) {
(b*(T-Tmin)*sqrt((aw-awmin)*(CO2max-CO2_dissolved_)*(NaLmax-NaL)))
}
notVisibleAxes <- expectedAxes[!expectedAxes %in% visAxes]
result <- outer(values(myHash[visVar1]),values(myHash[visVar2]),response_surface,as.double(values(myHash[notVisibleAxes[1]])),as.double(values(myHash[notVisibleAxes[2]])))
colnames(result)<-multVar2
rownames(result)<-multVar1
multVar2
colnames(result)
result
T
aw
myHash['T']
myHash['aw']
dim(result)
result
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
myVarNames
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropintransfer.r')
source('~/Dokumente/Projects/ModelRepository/gropin/output.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
View(MetaData)
View(MetaData)
MetaData$Data
MetaData$Data[1]<-"test"
View(MetaData)
View(MetaData)
MetaData$...12[1]
MetaData$...12[132]
MetaData$...12[131]
MetaData$...12[130]
library(writexl)
install.packages("writexl")
library(writexl)
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
write_xlsx(list(GenericMetadataSchema=MetaData),path="test.xlsx")
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
library(xlsx)
install.packages()
install.packages(xlsx)
install.packages("xlsx)
install.packages("xlsx)
install.packages("xlsx")
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
source('~/Dokumente/Projects/ModelRepository/gropin/testEditSheet.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R.r')
MetaData$Data[1]
MetaData$Data[3]
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R.r')
paste("Gropin Model Nr.",growthModels$Microorganism)
gropinDB$Microorganism[run]
gropinDB$MgrowthModels$Microorganismicroorganism[run]
growthModels$Microorganism
growthModels$Microorganism[run]
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
View(growthModels)
View(growthModels)
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
multVar
multVar1
1/multVar1
1+1/multVar1
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
time2Xlog
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
time2Xlog
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
time2Xlog
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
mymy <- append(mymy,"
)
)
""
"
response_surface(T_kinetic,aw_kinetic,CO2dissolved)
T_kinetic
response_surface(1,2,3)
aw_kinetic
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_par.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/show_case_mod.r')
source('~/Dokumente/Projects/ModelRepository/gropin/showcase/showcase_vis.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
namesofAddPars
namesofAddPars <- c("visVar1",
"visVar1",
"mode",
"lagTime",
"logIncrease",
"logN0",
"logNEnd",
"simTime")
for(addPar in 1:nrOfVariables) {
namesofAddPars <- append(namesofAddPars,paste0(myVarNames[addPar],"_kinetic"))
}
namesofAddPars
for(n in namesofAddPars) {print(n)}
namesofAddPars
namesofAddPars[1]
namesofAddPars[-1]
namesofAddPars[-1:-2]
namesofAddPars[length(namesofAddPars)]
namesofAddPars[length(namesofAddPars):length(namesofAddPars)-nrOfVariables]
namesofAddPars[length(namesofAddPars)-nrOfVariables:length(namesofAddPars):]
namesofAddPars[length(namesofAddPars)-nrOfVariables:length(namesofAddPars)]
namesofAddPars[(length(namesofAddPars)-nrOfVariables):length(namesofAddPars)]
namesofAddPars[(length(namesofAddPars)-nrOfVariables+1):length(namesofAddPars)]
mm<-namesofAddPars[(length(namesofAddPars)-nrOfVariables):length(namesofAddPars)]
mm
if("T_kinetic" %in mm) print("yes")
if("T_kinetic" %in mm) print("yes")
if("T_kinetic" %in% mm) print("yes")
if("T_kinec" %in% mm) print("yes")
growthModels$Authors[run]
growthModels$`Rate label`[run]
growthModels$`Special Notes`[run]
growthModels$`Special notes`
View(MetaData)
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
growthModels$Authors[run]
strsplit(growthModels$Authors[run],",")
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
authorVec[2*a]
MetaData$...29[3]
MetaData$...31[3]
authorVec[a]
authorVec[1]
authorVec[2]
unlist(authorVec)
authorVec <- unlist(strsplit(growthModels$Authors[run],","))
authorVec[1]
authorVec[2]
authorVec[2*2]
authorVec[2*1]
authorVec[2*2-1]
authorVec[2*1-1]
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
authorVec[-1]
authorVec[0]
authorVec[length(authorVec)]
authorVec[length(authorVec)]
authorVec[length(authorVec)-1]
authorVec[1:length(authorVec)-1]
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
authorVec[1:length(authorVec)-1]
paste(authorVec[1:length(authorVec)-1],collapse = ",")
source('~/Dokumente/Projects/ModelRepository/gropin/gropin2R_showcase.r')
